{% comment %}
Tailwind facets toolbar (без Alpine для filters)
{% endcomment %}

{%- liquid
assign sort_by = results.sort_by | default: results.default_sort_by
if results.url
  assign results_url = results.url
else
  assign terms = results.terms | escape
  assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
endif
-%}

<div
    id="FacetsToolbarContainer"
  x-data="facetsToolbar()"
  class="w-full bg-white rounded shadow p-4"
>
  <form
     id="FacetFiltersForm"
    x-ref="facetForm"
    class="space-y-4"
    @submit.prevent="submitFacets()"
    @change="submitFacets()"
  >
    {%- if results.terms -%}
      <input type="hidden" name="q" value="{{ results.terms | escape }}">
      <input name="options[prefix]" type="hidden" value="last">
    {%- endif -%}

    {% if enable_filtering %}
      <div id="FacetsWrapperDesktop" class="mb-4">
        <h2 class="text-lg font-semibold mb-2" id="verticalTitle" tabindex="-1">
          {{ 'products.facets.filter_by_label' | t }}
        </h2>
        {% for filter in results.filters %}
          {% if filter.type == 'boolean' or filter.type == 'list' %}
            <details class="mb-2 border rounded" {% if filter.open %}open{% endif %}>
              <summary class="cursor-pointer px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-t">
                <span class="font-medium">{{ filter.label }}</span>
                {% if filter.active_values.size > 0 %}
                  <span class="ml-2 text-xs text-gray-500">
                    ({{ 'products.facets.filters_selected.one' | t: count: filter.active_values.size }})
                  </span>
                {% endif %}
              </summary>
              <div class="px-4 py-2">
                <fieldset>
                  <legend class="sr-only">{{ filter.label }}</legend>
                  <ul class="space-y-1">
                  {% if filter.presentation == 'image' %}
                    {% assign show_limit = 12 %}
                  {% else %}
                    {% assign show_limit = 10 %}
                  {% endif %}
                  {% if filter.values.size > show_limit %}
                    {% assign show_more = true %}
                  {% else %}
                    {% assign show_more = false %}
                  {% endif %}
                    {% for value in filter.values %}
                      {% if forloop.index0 < show_limit or show_more == false %}
                        <li>
                          <label
                            class="flex items-center space-x-2 cursor-pointer
                             {% if value.count == 0 %}
                                {% unless value.active %}opacity-50 pointer-events-none{% endunless %}
                              {% endif %}
                              {% if value.active %}font-bold text-blue-600{% endif %}">
                            <input
                              type="checkbox"
                              name="{{ value.param_name }}"
                              value="{{ value.value }}"
                              {% if value.active %}checked{% endif %}
                              {% if value.count == 0 %}
                                {% unless value.active %}
                                  disabled
                                {% endunless %}
                              {% endif %}
                              class="form-checkbox h-4 w-4 text-blue-600"
                            >
                            <span>{{ value.label }}</span>
                            <span class="text-xs text-gray-400">({{ value.count }})</span>
                          </label>
                        </li>
                      {% endif %}
                    {% endfor %}
                  </ul>
                  {% if show_more %}
                    <div x-data="{ showMore: false }">
                      <template x-if="showMore">
                        <ul class="space-y-1 mt-2">
                          {% for value in filter.values offset:show_limit %}
                            <li>
                              <label
                                class="flex items-center space-x-2 cursor-pointer
                                {% if value.count == 0 %}
                                  {% unless value.active %}
                                    opacity-50 pointer-events-none
                                  {% endunless %}
                                {% endif %}
                                {% if value.active %}font-bold text-blue-600{% endif %}">
                                <input
                                  type="checkbox"
                                  name="{{ value.param_name }}"
                                  value="{{ value.value }}"
                                  {% if value.active %}checked{% endif %}
                                  {% if value.count == 0 %}
                                    {% unless value.active %}
                                        disabled
                                    {% endunless %}
                                  {% endif %}
                                  class="form-checkbox h-4 w-4 text-blue-600"
                                >
                                <span>{{ value.label }}</span>
                                <span class="text-xs text-gray-400">({{ value.count }})</span>
                              </label>
                            </li>
                          {% endfor %}
                        </ul>
                      </template>
                      <button
                        type="button"
                        class="mt-2 text-blue-600 underline text-sm"
                        @click="showMore = !showMore"
                        x-text="showMore ? '{{ 'products.facets.show_less' | t }}' : '{{ 'products.facets.show_more' | t }}'">
                        {{ 'products.facets.show_more' | t }}
                      </button>
                    </div>
                  {% endif %}
                </fieldset>
              </div>
            </details>
          {% elsif filter.type == 'price_range' %}
            <details class="mb-2 border rounded">
              <summary class="cursor-pointer px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-t">
                <span>{{ filter.label }}</span>
              </summary>
              <div class="px-4 py-2">
                <div class="flex items-center space-x-2">
                  <input
                    type="number"
                    name="filter.v.price.gte"
                    value="{% if filter.min_value.value %}{{ filter.min_value.value | divided_by: 100 }}{% endif %}"
                    min="0"
                    class="form-input w-20 border rounded px-2 py-1"
                    placeholder="Min"
                  />
                  -
                  <input
                    type="number"
                    name="filter.v.price.lte"
                    value="{% if filter.max_value.value %}{{ filter.max_value.value | divided_by: 100 }}{% endif %}"
                    min="0"
                    class="form-input w-20 border rounded px-2 py-1"
                    placeholder="Max"
                  />
                </div>
                <a
                  href="{{ filter.url_to_remove }}"
                  class="text-xs text-red-500 underline mt-2 inline-block"
                >
                  {{- 'products.facets.reset' | t -}}
                </a>
              </div>
            </details>
          {% endif %}
        {% endfor %}
      </div>
      <!-- Pills for active filters (horizontal) -->
      {% if filter_type == 'horizontal' %}
        <div class="flex flex-wrap gap-2 mb-4">
          {% for filter in results.filters %}
            {% for value in filter.active_values %}
              <a
                href="{{ value.url_to_remove }}"
                class="flex items-center bg-blue-100 text-blue-700 px-2 py-1 rounded text-xs"
              >
                <span>{{ filter.label }}: {{ value.label }}</span>
                <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
              </a>
            {% endfor %}
          {% endfor %}
          <a href="{{ results_url }}" class="text-xs underline text-gray-500">{{ 'products.facets.clear_all' | t }}</a>
        </div>
      {% endif %}
    {% endif %}

    {% if results.current_vendor or results.current_type %}
      <input type="hidden" name="q" value="{{ results.current_vendor }}{{ results.current_type }}">
    {% endif %}

    <!-- Sorting and product count (horizontal) -->
    {% if enable_sorting %}
      <div class="flex items-center justify-between mt-4">
        <div>
          <label for="SortBy" class="block text-sm font-medium text-gray-700 mb-1">
            {{ 'products.facets.sort_by_label' | t }}
          </label>
<select
  name="sort_by"
  id="SortBy"
  class="form-select border rounded px-2 py-1"
>
  {% for option in results.sort_options %}
    {% assign option_string = option | join: '||' %}
    {% assign parts = option_string | split: '||' %}
    {% assign value = parts[0] %}
    {% assign label = parts[1] %}
    <option value="{{ value | escape }}"
      {% if value == sort_by or value == results.default_sort_by %}selected{% endif %}>
      {{ label }}
    </option>
  {% endfor %}
</select>

        </div>
        <div class="text-sm text-gray-600">
          {{ results.products_count }} / {{ results.all_products_count }}
        </div>
      </div>
    {% endif %}
  </form>
</div>

<script>
window.facetsToolbar = function facetsToolbar() {
  return {
    loading: false,
    submitFacets(event) {
      if (event) event.preventDefault();
      this.loading = true;
      const form = this.$refs.facetForm;
      const formData = new FormData(form);
      const params = new URLSearchParams(formData);

      // Витягуємо section_id з DOM (з data-section-id на гріді)
      const sectionId = document.querySelector('#ProductGridContainer')?.dataset.sectionId;
      if (sectionId) params.set('section_id', sectionId);

      const url = window.location.pathname + '?' + params.toString();

      fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
        .then(res => res.text())
        .then(html => {
          // Замінюємо весь контейнер секції
          const parser = new DOMParser();
          const doc = parser.parseFromString(html, 'text/html');
          const newContainer = doc.querySelector('#CollectionAjaxContainer');
          const oldContainer = document.querySelector('#CollectionAjaxContainer');
          if (newContainer && oldContainer && oldContainer.parentNode) {
            oldContainer.parentNode.replaceChild(newContainer, oldContainer);
          }
        })
        .finally(() => this.loading = false);
    }
  }
}
</script>